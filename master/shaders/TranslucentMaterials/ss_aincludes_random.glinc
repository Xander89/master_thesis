highp float noise(vec2 co)
{
    highp float a = 12.9898;
    highp float b = 78.233;
    highp float c = 43758.5453;
    highp float dt = dot(co.xy,vec2(a,b));
    highp float sn = mod(dt,3.14);
    return fract(sin(sn) * c);
}


float LFSR_Rand_Gen(in int n)
{
  // <<, ^ and & require GL_EXT_gpu_shader4.
  n = (n << 13) ^ n;
  int s = (n * (n*n*15731+789221) + 1376312589) & 0x7fffffff;
  return s / (4294967296.0f) * 2;
}

float LCG(in uint k)
{
  uint b = 3125;
  uint c = 49;
  uint result = 1; /* have to start somewhere */

  for (;k > 0;k>>=1)
  {
    if ((k & 1) == 1) result = result * b + c;
    c += b * c;
    b *= b;
  }
  return float(result) / 4294967296.0f;
}

uint LCG_uint(in uint k)
{
    uint b = 3125;
    uint c = 49;
    return k * b + c;
}

float LFSR_Rand_Gen_f( in int n )
{
  return float(LFSR_Rand_Gen(n));
}

uint tea( float val0, float val1 )
{
  uint v0 = uint(val0);
  uint v1 = uint(val1);
  uint s0 = 0;

  for(int n = 0; n < 16; n++ )
  {
    s0 += 0x9e3779b9;
    v0 += ((v1<<4)+0xa341316c)^(v1+s0)^((v1>>5)+0xc8013ea4);
    v1 += ((v0<<4)+0xad90777d)^(v0+s0)^((v0>>5)+0x7e95761e);
  }

  return v0;
}

uint tea( vec2 b )
{
  return tea(b.x,b.y);
}

uint lcg(uint prev)
{
  const uint LCG_A = 1664525u;
  const uint LCG_C = 1013904223u;
  prev = (LCG_A * prev + LCG_C);
  return prev & 0x00FFFFFF;
}

float sinApprox(float n)
{
    float x = mod(n,M_PI);
    //compute sine
    return 1.27323954f * x + (-2 * step(x,0.0f) + 1) * .405284735f * x * x;
}


float hash( float n )
{
     return fract(sin(n) * 43758.5453f);
}


uint wang_hash(uint seed)
{
    seed = (seed ^ 61) ^ (seed >> 16);
    seed *= 9;
    seed = seed ^ (seed >> 4);
    seed *= 0x27d4eb2d;
    seed = seed ^ (seed >> 15);
    return (seed);
}

highp float noise(vec2 co)
{
    highp float a = 12.9898;
    highp float b = 78.233;
    highp float c = 43758.5453;
    highp float dt = dot(co.xy,vec2(a,b));
    highp float sn = mod(dt,3.14);
    return fract(sin(sn) * c);
}

float hash2( float n )
{
    return fract(sin(n)*43758.5453);
}

float noise3( in vec3 x )
{
    vec3 p = floor(x);
    vec3 f = fract(x);

    f = f*f*(3.0-2.0*f);
    float n = p.x + p.y*57.0 + 113.0*p.z;
    return mix(mix(mix( hash2(n+  0.0), hash2(n+  1.0),f.x),
                   mix( hash2(n+ 57.0), hash2(n+ 58.0),f.x),f.y),
               mix(mix( hash2(n+113.0), hash2(n+114.0),f.x),
                   mix( hash2(n+170.0), hash2(n+171.0),f.x),f.y),f.z);
}

float noise_t( in float seed)
{
    return (22695477 * int(seed) + 1) / 2147483647.0f;
}


float noise2( in vec3 x )
{
    ivec3 p = ivec3(x);

    uint n = p.x + p.y * 57 + 113 * p.z;
    return wang_hash(n) / 2147483647.0f;
}


float LFSR_Rand_Gen(in int n)
{
  // <<, ^ and & require GL_EXT_gpu_shader4.
  n = (n << 13) ^ n;
  int s = (n * (n*n*15731+789221) + 1376312589) & 0x7fffffff;
  return s / (4294967296.0f) * 2;
}

float LCG(in uint n)
{
    return float((n * 49 + 3125)) * (64 / 4294967296.0f);
}

float LFSR_Rand_Gen_f( in int n )
{
  return float(LFSR_Rand_Gen(n));
}

float noise3f(in vec3 p)
{
  ivec3 ip = ivec3(floor(p));
  vec3 u = fract(p);
  u = u*u*(3.0-2.0*u);

  int n = ip.x + ip.y*57 + ip.z*113;

  float res = mix(mix(mix(LFSR_Rand_Gen_f(n+(0+57*0+113*0)),
                          LFSR_Rand_Gen_f(n+(1+57*0+113*0)),u.x),
                      mix(LFSR_Rand_Gen_f(n+(0+57*1+113*0)),
                          LFSR_Rand_Gen_f(n+(1+57*1+113*0)),u.x),u.y),
                 mix(mix(LFSR_Rand_Gen_f(n+(0+57*0+113*1)),
                          LFSR_Rand_Gen_f(n+(1+57*0+113*1)),u.x),
                      mix(LFSR_Rand_Gen_f(n+(0+57*1+113*1)),
                          LFSR_Rand_Gen_f(n+(1+57*1+113*1)),u.x),u.y),u.z);

  return 1.0 - res*(1.0/1073741824.0);
}

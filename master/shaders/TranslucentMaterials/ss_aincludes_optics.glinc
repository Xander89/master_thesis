vec3 refract2(vec3 inv, vec3 n)
{
    float c = dot(inv, n);
    return (1.0f/ior) * (c * n - inv) - n * sqrt(1 - (1.0f/ior)  * (1.0f/ior)  * (1 - c * c));
}

vec3 refract3(vec3 inv, vec3 n, float c)
{
    return (1.0f/ior) * (c * n - inv) - n * sqrt(1 - (1.0f/ior)  * (1.0f/ior)  * (1 - c * c));
}

vec2 fresnelPowerTransmittance(vec3 inv, vec3 n)
{
    float cosin = dot(inv,n);
    vec3 refr = refract3(inv,n,cosin);
    float costr = dot(refr,-n);

    float t_s = (2 * cosin) / (ior * cosin + costr);
    float t_p = (2 * cosin) / (ior * costr + cosin);
    vec2 t = vec2(t_s,t_p);

    return ior * (costr) * (t * t) / cosin;
}

float fresnel_T(vec3 inv, vec3 n)
{
    vec2 T = fresnelPowerTransmittance(inv,n);
    return 0.5 * (T.x + T.y);
}

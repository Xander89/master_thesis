#version 430
readonly layout(rgba32f) uniform image2DArray source;
writeonly layout(rgba32f) uniform image2DArray dest;
uniform int scaling;
layout (local_size_x = 8, local_size_y = 8) in;

vec4 sampleTex(ivec3 coord)
{
    return imageLoad(source, coord);
}

void main()
{
    ivec3 storePos = ivec3(gl_GlobalInvocationID.xyz);
    ivec3 sourcePos = storePos * ivec3(2,2,1);

    int ks = 1;

    vec4 c0 = imageLoad(source,sourcePos);
    vec4 c1 = imageLoad(source,sourcePos + ks * ivec3(1,0,0));
    vec4 c2 = sampleTex(sourcePos - ks * ivec3(1,0,0));
    vec4 c3 = sampleTex(sourcePos + ks * ivec3(0,1,0));
    vec4 c4 = sampleTex(sourcePos - ks * ivec3(0,1,0));

    vec4 c5 = sampleTex(sourcePos + ks * ivec3(2,0,0));
    vec4 c6 = sampleTex(sourcePos - ks * ivec3(2,0,0));
    vec4 c7 = sampleTex(sourcePos + ks * ivec3(0,2,0));
    vec4 c8 = sampleTex(sourcePos - ks * ivec3(0,2,0));

    vec4 c9 =  sampleTex(sourcePos + ks * ivec3(1,1,0));
    vec4 c10 = sampleTex(sourcePos - ks * ivec3(1,1,0));
    vec4 c11 = sampleTex(sourcePos + ks * ivec3(1,-1,0));
    vec4 c12 = sampleTex(sourcePos - ks * ivec3(1,-1,0));

    float v0 = clamp(c0.a,0.0f,1.0f);
    float v1 = clamp(c1.a,0.0f,1.0f);
    float v2 = clamp(c2.a,0.0f,1.0f);
    float v3 = clamp(c3.a,0.0f,1.0f);
    float v4 = clamp(c4.a,0.0f,1.0f);
    float v5 = clamp(c5.a,0.0f,1.0f);
    float v6 = clamp(c6.a,0.0f,1.0f);
    float v7 = clamp(c7.a,0.0f,1.0f);
    float v8 = clamp(c8.a,0.0f,1.0f) ;
    float v9 = clamp(c9.a,0.0f,1.0f);
    float v10 = clamp(c10.a,0.0f,1.0f);
    float v11 = clamp(c11.a,0.0f,1.0f);
    float v12 = clamp(c12.a,0.0f,1.0f);

    vec4 step1 = c0 * v0 + c1 * v1 + c2 * v2 + c3 * v3 + c4 * v4;
    float vstep1 = v0 + v1 + v2 + v3 + v4;
    vec4 step2 = c5 * v5 + c6 * v6 + c7* v7 + c8 * v8;
    float vstep2 = v5 + v6 + v7 + v8;
    vec4 step3 = c9 * v9 + c10 * v10 + c11 * v11 + c12 * v12;
    float vstep3 = v9 + v10 + v11 + v12;

    vec4 data = (step1 + step2 + step3) / max(vstep1 + vstep2 + vstep3, 1.0f);
    //vec3 si = vec3(1024.0f / scaling * 2,1024.0f / scaling * 2,10.0f);
    imageStore(dest, storePos, data);
}
